% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helper_functions.R
\name{allocate_groups}
\alias{allocate_groups}
\title{Subject Group Allocation}
\usage{
allocate_groups(data_frame, grouping_list)
}
\arguments{
\item{data_frame}{A data frame that includes a 'subject' column for participant identifiers. Generally produced with \code{compute_global_metrics()} or \code{compute_nodal_metrics()}}

\item{grouping_list}{A list where each element is named after a group and contains strings or patterns to match against 'subject' identifiers.}
}
\value{
A data frame with an additional 'group' column indicating the group allocation for each subject.
}
\description{
Dynamically allocates subjects to groups based on matching conditions specified within a grouping list.
This function iterates over each subject identifier, checks against provided patterns in the grouping list, and assigns
the corresponding group label if a match is found. It enforces strict input types for the data frame and grouping list
and ensures the presence of a 'subject' column in the data frame.
}
\details{
Allocate subjects to groups based on conditions in a grouping list
}
\examples{
data_dir <- system.file("extdata", package = "NetAnalyseR")
subjects <- c("A", "B", "C", "D")
file_convention <- ".csv"
output <- process_matrices(data_dir, subjects, file_convention)
global_metrics <- c("characteristic_path_length", "global_efficiency_wei")
global_df <- compute_global_metrics(output$matrices, global_metrics, output$subjects)
grouping_list <- list(
  control = c("A", "B"),
  treatment = c("C", "D")
)
allocated_df <- allocate_groups(global_df, grouping_list)
}
