% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local_efficiency_wei.R
\name{local_efficiency_wei}
\alias{local_efficiency_wei}
\title{Calculate the Local Efficiency of a Weighted Graph}
\usage{
local_efficiency_wei(W, validate = TRUE)
}
\arguments{
\item{W}{A square, symmetric matrix representing the weighted adjacency matrix of an undirected graph.
Weights should be non-negative, and diagonal elements (self-loops) are ignored.}

\item{validate}{Whether to validate the input matrix.}
}
\value{
A numeric vector of length equal to the number of nodes in the graph, where each element represents
the local efficiency of the corresponding node.
}
\description{
This function computes the local efficiency of a weighted graph. Local efficiency is a measure of how well information
is exchanged by the neighbors of a given node when that node is removed. The function processes a weighted adjacency
matrix representing the graph, validates it, sets self-loops to zero, and applies a weight conversion to treat the weights
as lengths. It then calculates the local efficiency for each node by considering the efficiency of its subgraph formed by its
immediate neighbors.
}
\examples{
# Example: Create a 4x4 weighted adjacency matrix
W <- matrix(c(0, 2, 1, 4, 2, 0, 3, 5, 1, 3, 0, 6, 4, 5, 6, 0), nrow = 4, byrow = TRUE)
local_efficiency_wei(W)
}
