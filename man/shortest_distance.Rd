% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shortest_distance.R
\name{shortest_distance}
\alias{shortest_distance}
\title{Calculate the Shortest Path Between Nodes in a Graph}
\usage{
shortest_distance(L)
}
\arguments{
\item{L}{A numeric matrix representing the lengths or distances between nodes in the graph.
The matrix should be square, with dimensions N x N, where N is the number of nodes. Each
element L\link{i, j} represents the distance from node i to node j.}
}
\value{
A matrix of the same dimension as \code{L}, where each element \link{i, j} represents the
shortest distance from node i to node j in the graph. If a node is unreachable, the distance
is set to 0.
}
\description{
Computes the shortest paths between nodes in a graph using a variant of Dijkstra's algorithm.
The function takes a matrix of distances (lengths) between nodes, where the distance inversely
represents the strength of connection between the nodes. Stronger connections have shorter
distances. This function is particularly useful for processing matrices derived from weight
conversion processes, like \code{weight_conversion(W, 'lengths')}.
}
\examples{
W <- matrix(runif(16), 4, 4) # Random weights for illustration
L <- weight_conversion(W, 'lengths') # Hypothetical function to convert weights to lengths
shortest_paths <- shortest_distance(L)

}
